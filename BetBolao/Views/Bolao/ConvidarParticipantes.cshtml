@model BetBolao.Models.ConvitesBolao

@{
    ViewBag.Title = "ConvidarParticipantes";
}

<h2>Convidar amigos...</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @TempData["mensagem"]
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.IdConvite, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdConvite, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdConvite, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.IdBolao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdBolao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdBolao, "", new { @class = "text-danger" })
                </div>*@
            @Html.HiddenFor(model => model.IdBolao)
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.IdAnfitriao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdAnfitriao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdAnfitriao, "", new { @class = "text-danger" })
                </div>*@
            @Html.HiddenFor(model => model.IdAnfitriao)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailConvidado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmailConvidado, new { @class = "form-control"})
               
                @Html.ValidationMessageFor(model => model.EmailConvidado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TextoConvite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TextoConvite, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TextoConvite, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.aberto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.aberto, new {@Value = "sim" } )
                    @Html.ValidationMessageFor(model => model.aberto, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.aceite, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.aceite, new { @Value = "não"})
                    @Html.ValidationMessageFor(model => model.aceite, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
